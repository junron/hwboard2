version = '0.0.1-SNAPSHOT'

apply plugin: 'kotlin2js'
apply plugin: 'kotlin-dce-js'
apply plugin: 'org.jetbrains.kotlin.frontend'
apply plugin: 'kotlinx-serialization'

repositories {
    jcenter()
    maven { url = 'https://dl.bintray.com/rjaros/kotlin' }
    maven { url = "https://kotlin.bintray.com/js-externals" }
    maven { url = 'https://dl.bintray.com/rjaros/kotlin' }
}
evaluationDependsOn(":common")

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlin_version"
    compile project(":common").sourceSets.main.output
    compile "org.jetbrains.kotlinx:kotlinx-serialization-runtime-js:0.14.0"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core-js:1.3.2"
    implementation 'com.willowtreeapps:fuzzywuzzy-kotlin-js:0.9.0'
    compileOnly "pl.treksoft:jquery-kotlin:0.0.4"
}

kotlinFrontend {

    sourceMaps = production

    npm {
        dependency("framework7","5.1.3")
        devDependency("style-loader","1.0.1")
        devDependency("css-loader","3.2.1")
        devDependency("file-loader")
        dependency("sugar-date")
        dependency("tinycolor2")
        dependency("jquery","3.3.1")
        devDependency("terser-webpack-plugin")
    }

    webpackBundle {
        mode = production ? "production" : "development"
        publicPath = "/frontend/"
        contentPath = file("resources/web")
        port = 9090
        proxyUrl = "http://localhost:8080"
    }
    define("PRODUCTION", production)
}

compileKotlin2Js {
    kotlinOptions.metaInfo = true
    kotlinOptions.outputFile = "$project.buildDir.path/js/${project.name}.js"
    kotlinOptions.sourceMap = true
    kotlinOptions.moduleKind = "umd"
//    kotlinOptions.main = "call"
}

sourceSets {
    main {
        kotlin.srcDirs += "src"
        kotlin.srcDirs += "../common/src"
        resources.srcDirs += "resources"
        output.resourcesDir = "build/js/resources"
    }
}
